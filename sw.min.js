const cacheName="scoreboard-v1.3",appShellFiles=["/scoreboard-web","/scoreboard-web/index.html","/scoreboard-web/index.min.css","/scoreboard-web/index.min.js","/scoreboard-web/nosleep.min.js","/scoreboard-web/favicon.png","/scoreboard-web/kJEhBvYX7BgnkSrUwT8OhrdQw4oELdPIeeII9v6oFsI.woff2","/scoreboard-web/whistle-blow-long.wav"];self.addEventListener("install",e=>{e.waitUntil((async()=>{const a=await caches.open(cacheName);await a.addAll(appShellFiles).then(()=>{console.log("[Service Worker] Installed"),e.currentTarget.clients.matchAll({includeUncontrolled:!0}).then(e=>{e.forEach(e=>{e.postMessage("installed")})})})})())}),self.addEventListener("fetch",e=>{e.respondWith((async()=>{const a=await caches.match(e.request);if(console.log(`[Service Worker] Fetching resource: ${e.request.url}`),a)return a;const c=await fetch(e.request),s=await caches.open(cacheName);return s.put(e.request,c.clone()),console.log(`[Service Worker] Caching new resource: ${e.request.url}`),c})())}),self.addEventListener("activate",e=>{caches.delete(),e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==cacheName)return caches.delete(e)}))))}),self.addEventListener("message",e=>{"delete-cache"==e.data&&e.waitUntil(caches.delete(cacheName))});